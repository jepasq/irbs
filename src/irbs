#!/usr/bin/env ruby

VERSION="0.0.0"
REVISION="1"

# Argument handling
require_relative 'argument'
require_relative 'server'

srv = Server.new

arg=Argument.new

help = ArgumentOption.new('--help', 'Show usage text and exit') do
  puts "irbs v#{VERSION}-#{REVISION} usage text :\n"
  puts "An Inspection/Representation Based web Server."
  
  puts "\nOptions :"
  puts "  --help, -h, -?   Print this usage text and exit with 0 exit status."
  arg.opts.each do a
    puts "  #{a.full_text}"
  end
  exit(0)
end
help.add_alias "-h"
help.add_alias "-?"
arg.add(help)

ni = ArgumentOption.new('--non-interactive',
                          'Print endpoint to console and exit.') do
  srv.interactive = false
  exit(0)
end
ni.add_alias "-n"
arg.add ni


ep = ArgumentOption.new('--endpoint',
                          'The endpoint to print in non-interactive mode.') do
  srv.endpoint = ARGV[ARGV.index('--endpoint') + 1]
  exit(0)
end
ep.add_alias "-e"
arg.add ep

po = ArgumentOption.new('--port',
                          'The port to listen client from.') do
  srv.endpoint = ARGV[ARGV.index('--port') + 1]
  exit(0)
end
po.add_alias "-p"
arg.add po


arg.consume(ARGV)

# Content/input directory
dir = ARGV[0]
if dir.nil?
  dir = Dir.pwd
else
  dir = File.expand_path(dir)
end

unless File.directory? dir
  raise "Directory passed as first argument must exist"
end  

