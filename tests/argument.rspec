#                                          -*-ruby-*-

require 'argument'

describe Argument do
  it "can be instantiated" do
    a = Argument.new  # In fact, already fire an ArgumenttError here
    b = ArgumentOption.new('-z', 'zer'){}
    
    expect(a.nil?).to be false    
  end

  it "has a list we can add Option to" do
    a = Argument.new
    # Can't add anything but an ArgumentOption
    expect { a.add(2) }.to raise_error(ArgumentError)

    arg1=ArgumentOption.new('-h', 'help text'){
      puts "aze"
    }

    a.add arg1
  end

  it "has a function to remove slash-based options" do
    a = Argument.new    
    expect(a.only_dirs(['-h', '--aze', 'aze'])).to eq(['aze'])
    
  end
end	

describe ArgumentOption do
  it "can fire yield later" do
    val=0
    arg1=ArgumentOption.new('-h', 'help text'){ val +=1 }
    arg1.fire
    expect( val ).to equal(1)
  end

  it "can have alias" do
    arg1=ArgumentOption.new('-h', 'help text'){ }
    arg1.add_alias "--help"
  end

  it "has a fire_if function" do
    arg1=ArgumentOption.new('-h', 'help text'){ "aze" }
    arg1.add_alias "--help"
    
    expect( arg1.fire_if('-a') ).to be false
    expect( arg1.fire_if('-h') ).to be true
    expect( arg1.fire_if('--help') ).to be true
    
  end
end
