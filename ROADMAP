							-*-org-*-

* v1.0.0
** v0.1.0
*** v0.0.1
**** Work on the representation parser
- [ ] Could be find if it works as (return should be implicite)
#+BEGIN_EXAMPLE
    def to_s
      """
      Here is the returned content.
      And here, a #{variable} content!
      """
    end
#+END_EXAMPLE
- [ ] If .varname found, print this field value
- [ ] if #funcname found, run this function from 
**** Handle Unit tests and API documentation
- [ ] Maybe based on RSpec
  - [ ] Main script can be found, is executable and return an error status code
    when called on an inexisting dir
- [ ] From test/ directory. Add a Makefile rule for that
  
**** TODO Open a web server based on a DSL-based ruby configuration file
:LOGBOOK:
CLOCK: [2023-07-31 lun. 00:42]--[2023-07-31 lun. 00:57] =>  0:15
CLOCK: [2023-07-20 jeu. 13:27]--[2023-07-20 jeu. 14:00] =>  0:33
CLOCK: [2023-07-20 jeu. 12:03]--[2023-07-20 jeu. 12:21] =>  0:18
CLOCK: [2023-07-20 jeu. 11:10]--[2023-07-20 jeu. 11:40] =>  0:30
CLOCK: [2023-07-20 jeu. 10:45]--[2023-07-20 jeu. 11:03] =>  0:18
CLOCK: [2023-07-19 mer. 05:18]--[2023-07-19 mer. 05:37] =>  0:19
CLOCK: [2023-07-18 mar. 13:17]--[2023-07-18 mar. 13:24] =>  0:07
CLOCK: [2023-07-18 mar. 12:43]--[2023-07-18 mar. 12:58] =>  0:15
CLOCK: [2023-07-18 mar. 12:30]--[2023-07-18 mar. 12:37] =>  0:07
CLOCK: [2023-07-18 mar. 11:55]--[2023-07-18 mar. 12:14] =>  0:19
:END:
Based on a static generator tool but to a fully REST server

- [X] Main script is in src/
- [X] Add a Makefile with an install rule
- [X] If more that 1 arg, error  
- [X] Should accept project dir as arg or use pwd if not used
- [X] If first arg is not a directory or doesn't exist, raise
- [-] Start argument handling function
  - [X] Add an argument.rb file and class
  - [X] An argument is a command with help text and an action block and
    possibly aliases
  - [X] Must be able to print all options with help text (for usage)
  - [ ] Must consume encountered options from ARGV list to let raise an
    error for unrecognized option
- [ ] Must find a way to handle '-' starting option and raise an
  exception if not handled
- [ ] -?, -h or --help may print a usage message
- [ ] Must have an option to print page to stdout for test purpose
- [ ] Default opened page/class may be Home or Root but must be configurable
- [ ] Test that usage text contains appname and version    
- [ ] The main entry file could be a ruby-based DSL to configure server
  host, port etc...
  see https://www.paweldabrowski.com/articles/building-dsl-with-ruby
- [ ] Open our own webserver
  https://www.rubyguides.com/2016/08/build-your-own-web-server/
- [ ] First tests go in examples/{name}/ directory
  Unit tests may be based on this examples and the main script return value
**** Correct project handling
:LOGBOOK:
CLOCK: [2023-07-21 ven. 15:22]--[2023-07-21 ven. 15:30] =>  0:08
:END:
- [X] github should run CI
- [ ] Make this project's github repo public
